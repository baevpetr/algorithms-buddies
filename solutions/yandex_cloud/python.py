# **Python**
# облако на финале спросили немного тех вопросов
# напр
# вот в го/питон есть асинхронная работа, зачем она нужна
# вот ты нажимаешь wget ya.ru - что происходит внутри
# первый подготовительный:
# 1 задача - определить полный полиндром, ограничение заключается в том, что больше никаких строк создавать нельзя
# 2. Определение скобочек и нужно вывести количество не совпадений
# решение задачи на первом этапе:
# # Даны отрезки на прямой представленные в виде листа листов
# list_l = [
# [1, 3],
# [12, 16],
# [9, 15],
# [4, 4],
# [18, 18],
# [8, 11],
# ]
# # отсортированный лист листов
# # [
# #     [ 1,  3  ],
# #     [ 4,  4  ],
# #
# #     [ 8,  11 ],
# #     [ 9,  15 ],
# #     [ 12, 16 ],
# #
# #     [ 18, 18 ],
# #
# # ]
# # На выходе нужно получить отрезки которые не пересекаются между собой
# # [
# #     [ 1,   4 ]
# #     [ 8,  16 ]
# #     [ 18, 18 ]
# # ]
# def list_concatenate(list_l):
# new_list_l = []
# list_l.sort()
# for num, inner_list in enumerate(list_l):
# if num == 0:
# new_list_l.append(inner_list)
# else:
# if inner_list[0] <= new_list_l[-1][1] + 1:
# new_list_l[-1][1] = inner_list[1] if inner_list[1] > new_list_l[-1][1] else new_list_l[-1][1]
# else:
# new_list_l.append(inner_list)
# return new_list_l
# print(list_concatenate(list_l))
